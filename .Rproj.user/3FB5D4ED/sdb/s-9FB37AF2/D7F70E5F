{
    "contents" : "best <- function(state, outcome) {\n  \n  ## Read outcome data\n  rawdata <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n  \n  ## Check that state and outcome are valid\n  states <- unique(rawdata$State)\n  outcomes <- c(\"heart attack\", \"heart failure\", \"pneumonia\")\n  \n  if (!state %in% rawdata$State) stop(\"invalid state\")\n  if (!outcome %in% outcomes) stop(\"invalid outcome\")\n  \n  ## Return hospital name in that state with lowest 30-day death\n  ## rate\n  \n  data <- rawdata[rawdata$State == state, ]\n  data[, c(11, 17, 23)] <- sapply(data[, c(11, 17, 23)], as.numeric)\n  data <- data[order(data[, 2]), ]\n  \n  if (outcome == \"heart attack\") {\n    best <- data[which.min(data[, 11]), \"Hospital.Name\"]\n  }\n  else if (outcome == \"heart failure\") {\n    best <- data[which.min(data[, 17]), \"Hospital.Name\"]\n  }\n  else {\n    best <- data[which.min(data[, 23]), \"Hospital.Name\"]\n  }\n  \n  best\n}",
    "created" : 1407092157683.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3777034083",
    "id" : "D7F70E5F",
    "lastKnownWriteTime" : 1407092972,
    "path" : "~/GitHub/ProgrammingAssignment3/ProgrammingAssignment3/best.R",
    "project_path" : "best.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}